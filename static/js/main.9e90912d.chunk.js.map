{"version":3,"sources":["data/filmData.js","images/imdb.png","components/ImdbInfo.js","components/MediaModal.js","images/star.png","common/common.jsx","components/FilmTable.js","components/FilmDisclaimer.js","components/Films.js","data/tvData.js","components/TvTable.js","components/TvDisclaimer.js","components/TvSeries.js","images/Kon.png","images/film-black.png","images/tv-black.png","components/App.js","index.js"],"names":["filmData","getImdbScore","ratings","score","forEach","rating","Source","Value","substring","getDirectorOrWriter","metadata","Director","Writer","ImdbInfo","props","link","useState","imdbData","data","setData","loading","setLoading","useEffect","imdbLink","imdbId","url","String","slice","replace","a","axios","result","fetchData","className","onClick","handleClose","Title","src","Poster","alt","Ratings","href","imdb","MediaModal","show","showHideClassName","createStars","stars","star","FilmTable","state","showModal","newData","setState","hideModal","this","align","map","row","title","language","year","Component","FilmDisclaimer","Films","tvData","TvTable","TvDisclaimer","TvSeries","App","toggleFilms","showFilms","showTV","tvbutton","document","getElementById","ReactDOM","findDOMNode","style","filmbutton","toggleTV","reset","kon","id","film","tv","render"],"mappings":"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","file":"static/js/main.9e90912d.chunk.js","sourcesContent":["export const filmData = \n[\n    {\n        \"title\": \"In The Mood For Love\",\n        \"stars\": 3,\n        \"language\": \"Cantonese\",\n        \"year\": 2000,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0118694/\"\n    },\n    {\n        \"title\": \"Kikujiro\",\n        \"stars\": 3,\n        \"language\": \"Japanese\",\n        \"year\": 1999,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0199683/\"\n    },\n    {\n        \"title\": \"Millennium Actress\",\n        \"stars\": 3,\n        \"language\": \"Japanese\",\n        \"year\": 2001,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0291350/\"\n    },\n    {\n        \"title\": \"Oldboy\",\n        \"stars\": 3,\n        \"language\": \"Korean\",\n        \"year\": 2003,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0364569/\"\n    },\n    {\n        \"title\": \"Paprika\",\n        \"stars\": 3,\n        \"language\": \"Japanese\",\n        \"year\": 2006,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0851578/\"\n    },\n    {\n        \"title\": \"Porco Rosso\",\n        \"stars\": 3,\n        \"language\": \"Japanese\",\n        \"year\": 1992,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0104652/\"\n    },\n    {\n        \"title\": \"Spirited Away\",\n        \"stars\": 3,\n        \"language\": \"Japanese\",\n        \"year\": 2001,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0245429/\"\n    },\n    {\n        \"title\": \"The Fellowship Of The Ring\",\n        \"stars\": 3,\n        \"language\": \"English\",\n        \"year\": 2001,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0120737/\"\n    },\n    {\n        \"title\": \"The Shawshank Redemption\",\n        \"stars\": 3,\n        \"language\": \"English\",\n        \"year\": 1994,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0111161/\"\n    },\n    {\n        \"title\": \"127 Hours\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2010,\n        \"imdbLink\": \"https://www.imdb.com/title/tt1542344/\"\n    },\n    {\n        \"title\": \"Burning\",\n        \"stars\": 2,\n        \"language\": \"Korean\",\n        \"year\": 2018,\n        \"imdbLink\": \"https://www.imdb.com/title/tt7282468/\"\n    },\n    {\n        \"title\": \"Django Unchained\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2012,\n        \"imdbLink\": \"https://www.imdb.com/title/tt1853728/\"\n    },\n    {\n        \"title\": \"Full Metal Jacket\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 1987,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0093058/\"\n    },\n    {\n        \"title\": \"Get Out\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2017,\n        \"imdbLink\": \"https://www.imdb.com/title/tt5052448/\"\n    },\n    {\n        \"title\": \"Lost in Translation\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2003,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0335266/\"\n    },\n    {\n        \"title\": \"Office Space\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 1999,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0151804/\"\n    },\n    {\n        \"title\": \"Parasite\",\n        \"stars\": 2,\n        \"language\": \"Korean\",\n        \"year\": 2019,\n        \"imdbLink\": \"https://www.imdb.com/title/tt6751668/\"\n    },\n    {\n        \"title\": \"Perfect Blue\",\n        \"stars\": 2,\n        \"language\": \"Japanese\",\n        \"year\": 1997,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0156887/\"\n    },\n    {\n        \"title\": \"Princess Mononoke\",\n        \"stars\": 2,\n        \"language\": \"Japanese\",\n        \"year\": 1997,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0119698/\"\n    },\n    {\n        \"title\": \"Reservoir Dogs\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 1992,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0105236/\"\n    },\n    {\n        \"title\": \"Rocky\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 1976,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0075148/\"\n    },\n    {\n        \"title\": \"The Empire Strikes Back\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 1980,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0080684/\"\n    },\n    {\n        \"title\": \"The Good, the Bad and the Ugly\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 1966,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0060196/\"\n    },\n    {\n        \"title\": \"To Kill A Mockingbird\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 1962,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0056592/\"\n    },\n    {\n        \"title\": \"28 Days Later\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2002,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0289043/\"\n    },\n    {\n        \"title\": \"5 Centimeters Per Second\",\n        \"stars\": 1,\n        \"language\": \"Japanese\",\n        \"year\": 2007,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0983213/\"\n    },\n    {\n        \"title\": \"A Dirty Carnival\",\n        \"stars\": 1,\n        \"language\": \"Korean\",\n        \"year\": 2006,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0821442/\"\n    },\n    {\n        \"title\": \"A Tale Of Two Sisters\",\n        \"stars\": 1,\n        \"language\": \"Korean\",\n        \"year\": 2003,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0365376/\"\n    },\n    {\n        \"title\": \"Alien\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 1979,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0078748/\"\n    },\n    {\n        \"title\": \"Citizen Kane\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 1941,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0033467/\"\n    },\n    {\n        \"title\": \"Coraline\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2009,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0327597/\"\n    },\n    {\n        \"title\": \"Dunkirk\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2017,\n        \"imdbLink\": \"https://www.imdb.com/title/tt5013056/\"\n    },\n    {\n        \"title\": \"Grave of the Fireflies\",\n        \"stars\": 1,\n        \"language\": \"Japanese\",\n        \"year\": 1988,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0095327/\"\n    },\n    {\n        \"title\": \"Inglourious Basterds\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2009,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0361748/\"\n    },\n    {\n        \"title\": \"Jiro Dreams of Sushi\",\n        \"stars\": 1,\n        \"language\": \"Japanese\",\n        \"year\": 2011,\n        \"imdbLink\": \"https://www.imdb.com/title/tt1772925/\"\n    },\n    {\n        \"title\": \"Joint Security Area\",\n        \"stars\": 1,\n        \"language\": \"Korean\",\n        \"year\": 2000,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0260991/\"\n    },\n    {\n        \"title\": \"Nightcrawler\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2014,\n        \"imdbLink\": \"https://www.imdb.com/title/tt2872718/\"\n    },\n    {\n        \"title\": \"Okuribito\",\n        \"stars\": 1,\n        \"language\": \"Japanese\",\n        \"year\": 2008,\n        \"imdbLink\": \"https://www.imdb.com/title/tt1069238/\"\n    },\n    {\n        \"title\": \"Persona\",\n        \"stars\": 1,\n        \"language\": \"Swedish\",\n        \"year\": 1966,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0060827/\"\n    },\n    {\n        \"title\": \"Rocky II\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 1979,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0079817/\"\n    },\n    {\n        \"title\": \"The Babadook\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2014,\n        \"imdbLink\": \"https://www.imdb.com/title/tt2321549/\"\n    },\n    {\n        \"title\": \"The Spy Who Loved Me\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 1977,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0076752/\"\n    },\n    {\n        \"title\": \"The Thing\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 1982,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0084787/\"\n    },\n    {\n        \"title\": \"The Truman Show\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 1998,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0120382/\"\n    },\n    {\n        \"title\": \"The Wind Rises\",\n        \"stars\": 1,\n        \"language\": \"Japanese\",\n        \"year\": 2014,\n        \"imdbLink\": \"https://www.imdb.com/title/tt2013293/\"\n    },\n    {\n        \"title\": \"Tokyo Godfathers\",\n        \"stars\": 1,\n        \"language\": \"Japanese\",\n        \"year\": 2003,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0388473/\"\n    },\n    {\n        \"title\": \"Unbreakable\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2000,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0217869/\"\n    },\n    {\n        \"title\": \"Wild Strawberries\",\n        \"stars\": 1,\n        \"language\": \"Swedish\",\n        \"year\": 1957,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0050986/\"\n    },\n    {\n        \"title\": \"Wolf Children\",\n        \"stars\": 1,\n        \"language\": \"Japanese\",\n        \"year\": 2012,\n        \"imdbLink\": \"https://www.imdb.com/title/tt2140203/\"\n    }\n]\n\nexport default filmData;","export default __webpack_public_path__ + \"static/media/imdb.8b13a62e.png\";","import React, { useEffect, useState } from 'react';\nimport '../styles/MediaModal.css';\nimport imdb from '../images/imdb.png';\nimport axios from 'axios';\n\n\nfunction ImdbInfo(props) {\n    const [data, setData] = useState({ imdbData: [] });\n    const [loading, setLoading] = useState(false);\n \n    useEffect(() => {\n        const imdbId = getImdbId(props.url);\n\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n              const result = await axios(\n                `https://www.omdbapi.com/?i=${imdbId}&apiKey=15d1860`,\n              );\n              setData(result.data);\n              setLoading(false);\n            } catch (err) {\n              setLoading(false);\n            }\n        };\n        fetchData();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <div>\n            {loading ? (\n                <div className=\"loadingmessage\">Loading...</div>\n            ) : (\n            <div className=\"modal-content\">\n                <div className=\"metadata\" onClick={props.handleClose}>\n                    <h1 className=\"modal-header\">{data.Title}</h1>\n                    <img className=\"modal-poster\" src={data.Poster} alt=\"poster\" />\n                    <p className=\"modal-info\">{getDirectorOrWriter(data)}</p>\n                    <p className=\"modal-info\">IMDb Rating: {getImdbScore(data.Ratings)}</p>\n                </div>\n                {createImdbLink(props.url)}\n            </div>\n        )}\n      </div>\n    );\n}\n\nfunction getImdbId(imdbLink) {\n    var urlString = String(imdbLink);\n    return urlString.slice(27).replace('/', '');\n}\n\nfunction getImdbScore(ratings) {\n    var score = \"\";\n\n    if (ratings != null) {\n        ratings.forEach(rating => {\n            if (rating.Source === \"Internet Movie Database\") {\n                score = rating.Value.substring(0, 3);\n            }\n        });\n    }\n\n    return score;\n}\n\nfunction getDirectorOrWriter(metadata) {\n    if (metadata.Director !== \"N/A\") {\n        return \"Directed by \" + metadata.Director;\n    }\n    else if (metadata.Writer !== \"N/A\") {\n        return \"Written by \" + metadata.Writer;\n    }\n    else {\n        return \"\";\n    }\n}\n\nfunction createImdbLink(link) {\n    return (\n        <a href={link}>\n            <img className=\"imdb-icon\" src={imdb} alt=\"imdb\" />\n        </a>\n    )\n}\n\nexport default ImdbInfo;","import '../styles/MediaModal.css';\nimport ImdbInfo from './ImdbInfo';\n\nconst MediaModal = ({ handleClose, show, data }) => {\n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n    const imdbData = show ? <ImdbInfo url={data.imdbLink} handleClose={handleClose} /> : <div />;\n  \n    return (\n      <div className={showHideClassName} onClick={handleClose}>\n        <section className='modal-main'>\n            {imdbData}\n        </section>\n      </div>\n    );\n};\n\nexport default MediaModal;","export default __webpack_public_path__ + \"static/media/star.3f026a8c.png\";","import React from 'react';\nimport star from '../images/star.png';\nimport '../styles/Table.css';\n\nexport function createStars(stars) {\n    if (stars === 3) {\n        return (\n            <div className=\"stars\">\n                <img className=\"star-icon\" src={star} alt=\"star\" />\n                <img className=\"star-icon\" src={star} alt=\"star\" />\n                <img className=\"star-icon\" src={star} alt=\"star\" />\n            </div>)\n    }\n    else if (stars === 2) {\n        return (\n            <div className=\"stars\">\n                <img className=\"star-icon\" src={star} alt=\"star\" />\n                <img className=\"star-icon\" src={star} alt=\"star\" />\n            </div>)\n    }\n    else {\n        return (\n            <div className=\"stars\">\n                <img className=\"star-icon\" src={star} alt=\"star\" />\n            </div>)\n    }\n}","import React, {Component} from 'react';\nimport '../styles/Table.css';\nimport filmData from '../data/filmData.js';\nimport MediaModal from './MediaModal.js';\nimport { createStars } from '../common/common.jsx';\n\n\nclass FilmTable extends Component {\n    state = { show: false, data: '' }\n\n    showModal = (newData) => {\n        this.setState({ show: true, data: newData });\n    }\n  \n    hideModal = () => {\n        this.setState({ show: false, data: '' });\n    }\n\n    render() {\n        return (\n            <div>\n                <MediaModal show={this.state.show} handleClose={this.hideModal} data={this.state.data} ></MediaModal>\n                <table align=\"center\">\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th className=\"stars-th\">Stars</th>\n                            <th>Language</th>\n                            <th>Year</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {filmData.map((row) => (\n                            <tr key={row.title} className=\"tr-clickable\" onClick={() => this.showModal(row)}>\n                                <td className=\"title-td\">{row.title}</td>\n                                <td>{createStars(row.stars)}</td>\n                                <td>{row.language}</td>\n                                <td>{row.year}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default FilmTable;","import React from 'react';\nimport '../styles/App.css';\nimport star from '../images/star.png'\n\n\nconst FilmDisclaimer = () => (\n    <div className=\"diclaimer-container\">\n      <p className=\"diclaimer\">\n        <img className=\"star-disclaimer\" src={star} alt=\"star\"/>\n        <img className=\"star-disclaimer\" src={star} alt=\"star\"/>\n        <img className=\"star-disclaimer\" src={star} alt=\"star\"/> = &nbsp;All-time favorites\n      </p>\n      <p className=\"diclaimer\">\n        <img className=\"star-disclaimer-left-margin\" src={star} alt=\"star\"/>\n        <img className=\"star-disclaimer-right-margin\" src={star} alt=\"star\"/>\n        = &nbsp;Films that I love\n      </p>\n      <p className=\"diclaimer\">\n        <img className=\"star-disclaimer-both-margin\" src={star} alt=\"star\"/> = &nbsp;Films that I like a lot\n      </p>\n    </div>\n);\n\nexport default FilmDisclaimer;","import React from 'react';\nimport FilmTable from './FilmTable.js';\nimport FilmDisclaimer from './FilmDisclaimer.js';\nimport '../styles/App.css';\n\nconst Films = () => (\n    <div className=\"table-content\">\n      <FilmTable />\n      <FilmDisclaimer />\n    </div>\n  );\n\nexport default Films;","export const tvData = \n[\n    {\n        \"title\": \"Breaking Bad\",\n        \"stars\": 3,\n        \"language\": \"English\",\n        \"year\": 2008,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0903747/\"\n    },\n    {\n        \"title\": \"Hunter X Hunter\",\n        \"stars\": 3,\n        \"language\": \"Japanese\",\n        \"year\": 1999,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0426719/\"\n    },\n    {\n        \"title\": \"Mr. Robot\",\n        \"stars\": 3,\n        \"language\": \"English\",\n        \"year\": 2015,\n        \"imdbLink\": \"https://www.imdb.com/title/tt4158110/\"\n    },\n    {\n        \"title\": \"Malcolm In The Middle\",\n        \"stars\": 3,\n        \"language\": \"English\",\n        \"year\": 2000,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0212671/\"\n    },\n    {\n        \"title\": \"True Detective (Season 1)\",\n        \"stars\": 3,\n        \"language\": \"English\",\n        \"year\": 2014,\n        \"imdbLink\": \"https://www.imdb.com/title/tt2356777/\"\n    },\n    {\n        \"title\": \"Better Call Saul\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2015,\n        \"imdbLink\": \"https://www.imdb.com/title/tt3032476/\"\n    },\n    {\n        \"title\": \"Black Mirror\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2011,\n        \"imdbLink\": \"https://www.imdb.com/title/tt2085059/\"\n    },\n    {\n        \"title\": \"Chernobyl\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2019,\n        \"imdbLink\": \"https://www.imdb.com/title/tt7366338/\"\n    },\n    {\n        \"title\": \"Death Note\",\n        \"stars\": 2,\n        \"language\": \"Japanese\",\n        \"year\": 2006,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0877057/\"\n    },\n    {\n        \"title\": \"Game of Thrones\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2011,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0944947/\"\n    },\n    {\n        \"title\": \"It's Always Sunny In Philadelphia\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2005,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0472954/\"\n    },\n    {\n        \"title\": \"Succession\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2018,\n        \"imdbLink\": \"https://www.imdb.com/title/tt7660850/\"\n    },\n    {\n        \"title\": \"The Wire\",\n        \"stars\": 2,\n        \"language\": \"English\",\n        \"year\": 2002,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0306414/\"\n    },\n    {\n        \"title\": \"Curb Your Enthusiasm\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2000,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0264235/\"\n    },\n    {\n        \"title\": \"Dark\",\n        \"stars\": 1,\n        \"language\": \"German\",\n        \"year\": 2017,\n        \"imdbLink\": \"https://www.imdb.com/title/tt5753856/\"\n    },\n    {\n        \"title\": \"Haikyuu!!\",\n        \"stars\": 1,\n        \"language\": \"Japanese\",\n        \"year\": 2014,\n        \"imdbLink\": \"https://www.imdb.com/title/tt3398540/\"\n    },\n    {\n        \"title\": \"Manhattan Love Story\",\n        \"stars\": 1,\n        \"language\": \"Japanese\",\n        \"year\": 2003,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0420426/\"\n    },\n    {\n        \"title\": \"Peep Show\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2003,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0387764/\"\n    },\n    {\n        \"title\": \"Planet Earth II\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2016,\n        \"imdbLink\": \"https://www.imdb.com/title/tt5491994/\"\n    },\n    {\n        \"title\": \"Scrubs\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2001,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0285403/\"\n    },\n    {\n        \"title\": \"The IT Crowd\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2006,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0487831/\"\n    },\n    {\n        \"title\": \"The Pacific\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2010,\n        \"imdbLink\": \"https://www.imdb.com/title/tt0374463/\"\n    },\n    {\n        \"title\": \"The Vietnam War\",\n        \"stars\": 1,\n        \"language\": \"English\",\n        \"year\": 2017,\n        \"imdbLink\": \"https://www.imdb.com/title/tt1877514/\"\n    }\n]\n\nexport default tvData;","import React, {Component} from 'react';\nimport '../styles/Table.css';\nimport tvData from '../data/tvData';\nimport MediaModal from './MediaModal.js';\nimport { createStars } from '../common/common.jsx';\n\n\nclass TvTable extends Component {\n    state = { show: false, data: '' }\n\n    showModal = (newData) => {\n        this.setState({ show: true, data: newData });\n    }\n  \n    hideModal = () => {\n        this.setState({ show: false, data: '' });\n    }\n\n    render() {\n        return (\n            <div>\n                <MediaModal show={this.state.show} handleClose={this.hideModal} data={this.state.data} ></MediaModal>\n                <table align=\"center\">\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th className=\"stars-th\">Stars</th>\n                            <th>Language</th>\n                            <th>Year</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tvData.map((row) => (\n                            <tr key={row.title} className=\"tr-clickable\" onClick={() => this.showModal(row)}>\n                                <td className=\"title-td\">{row.title}</td>\n                                <td>{createStars(row.stars)}</td>\n                                <td>{row.language}</td>\n                                <td>{row.year}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default TvTable;","import React from 'react';\nimport '../styles/App.css';\nimport star from '../images/star.png'\n\nconst TvDisclaimer = () => (\n    <div className=\"diclaimer-container\">\n      <p className=\"diclaimer\">\n        <img className=\"star-disclaimer\" src={star} alt=\"star\"/>\n        <img className=\"star-disclaimer\" src={star} alt=\"star\"/>\n        <img className=\"star-disclaimer\" src={star} alt=\"star\"/> = &nbsp;All-time favorites\n      </p>\n      <p className=\"diclaimer\">\n        <img className=\"star-disclaimer-left-margin\" src={star} alt=\"star\"/>\n        <img className=\"star-disclaimer-right-margin\" src={star} alt=\"star\"/>\n        = &nbsp;TV series that I love\n      </p>\n      <p className=\"diclaimer\">\n        <img className=\"star-disclaimer-both-margin\" src={star} alt=\"star\"/> = &nbsp;TV series that I like a lot\n      </p>\n    </div>\n  );\n \nexport default TvDisclaimer  ","import React from 'react';\nimport TvTable from './TvTable.js';\nimport TvDisclaimer from './TvDisclaimer.js';\nimport '../styles/App.css';\n\nconst TvSeries = () => (\n    <div className=\"table-content\">\n      <TvTable />\n      <TvDisclaimer />\n    </div>\n  );\n\nexport default TvSeries;","export default __webpack_public_path__ + \"static/media/Kon.19a21553.png\";","export default __webpack_public_path__ + \"static/media/film-black.520bde13.png\";","export default __webpack_public_path__ + \"static/media/tv-black.e610f69d.png\";","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../styles/App.css';\nimport Films from './Films.js';\nimport TvSeries from './TvSeries.js';\nimport kon from '../images/Kon.png'\nimport film from '../images/film-black.png'\nimport tv from '../images/tv-black.png'\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        showFilms: false,\n        showTV: false\n    };\n  }\n\n  toggleFilms = () => {\n    const { showFilms } = this.state;\n    \n    this.setState({\n      showFilms: !showFilms,\n      showTV: false\n    });\n\n    let tvbutton = document.getElementById('tv-button')\n\n    if (this.state.showFilms === true) {\n      ReactDOM.findDOMNode(tvbutton).style['opacity'] = 1;\n    } else {\n      ReactDOM.findDOMNode(tvbutton).style['opacity'] = 0.3;\n    }\n\n    let filmbutton = document.getElementById('film-button')\n    ReactDOM.findDOMNode(filmbutton).style['opacity'] = 1;\n  }\n\n  toggleTV = () => {\n    const { showTV } = this.state;\n    \n    this.setState({\n      showTV: !showTV,\n      showFilms: false\n    });\n    \n    let filmbutton = document.getElementById('film-button')\n\n    if (this.state.showTV === true) {\n      ReactDOM.findDOMNode(filmbutton).style['opacity'] = 1;\n    } else {\n      ReactDOM.findDOMNode(filmbutton).style['opacity'] = 0.3;\n    }\n    \n    let tvbutton = document.getElementById('tv-button')\n    ReactDOM.findDOMNode(tvbutton).style['opacity'] = 1;\n  }\n\n  reset = () => {\n    this.setState({\n      showTV: false,\n      showFilms: false\n    });\n\n    let filmbutton = document.getElementById('film-button')\n    let tvbutton = document.getElementById('tv-button')\n    ReactDOM.findDOMNode(filmbutton).style['opacity'] = 1;\n    ReactDOM.findDOMNode(tvbutton).style['opacity'] = 1;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"banner\">\n          <div className=\"banner-content\" onClick={this.reset}>\n            Ole's Favorites\n            <img className=\"banner-image\" src={kon} alt=\"kon\" />\n          </div>\n        </div>\n        <div className=\"mainpage\">\n          <div className=\"icon-row\">\n            <img id=\"film-button\" className=\"film-button\" src={film} alt=\"film\" onClick={this.toggleFilms} />\n            <img id=\"tv-button\" className=\"tv-button\" src={tv} alt=\"tv\" onClick={this.toggleTV} />\n          </div>\n          { (() => {\n              if (this.state.showFilms)\n                return <Films />\n              if (this.state.showTV)\n                return <TvSeries />\n              else\n                return null\n            })()  \n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}